source('~/GitHub/ABMNK/import_real_data.R')
# Initial import ----------------------------------------------------------
rm(list = ls())
setwd("/Users/jdimas/GitHub/ABMNK/real_data")
data <- read.csv("data.csv", colClasses=c("Date", rep("numeric", 22)))
df <- na.omit(data, cols=c("date", "nominal_interest_rate", "inflation"))
df <- na.omit(data, cols=c("date"))
?na.omit
df <- na.omit(data, cols=c("output_gap"))
df <- na.omit(data, cols="output_gap")
df <- na.omit(data, cols=c(1))
d2 <- data.table(data)
colnames(data)
na.omit
data.table::na.omit(data)
na.omit(data)
na.omit(data, c="date")
df <- data[complete.cases(importData[c("date")]),]
df <- data[complete.cases(data[c("date")]),]
df <- data[complete.cases(data[c("date", "inflation")]),]
df <- data[complete.cases(data[c("inflation")]),]
df <- data[complete.cases(data[c("inflation", "nominal_interest_rate")]),]
df <- data[complete.cases(data[c("inflation", "nominal_interest_rate")]),]
View(df)
df <- data[complete.cases(data[c("inflation", "nominal_interest_rate")]),]
rownames(df) <- c(1:nrow(df))
View(df)
plot_ly(df, x=~date, y = ~nominal_interest_rate, name = 'nominal interest rate', type="scatter", mode = 'lines+markers',  hoverinfo = 'text', text = ~paste(rownames(df), date, sep="<br>")) %>%
add_trace(y = ~inflation, name = "inflation")
lm1 <- lm(inflation ~ q1 q2 q3 q4, df)
lm1 <- lm(inflation ~ q1 + q2 + q3 + q4, df)
while (!require("zoo")) install.packages("zoo")
while (!require("Quandl")) install.packages("Quandl")
# Set up
rm(list = ls())
setwd("/Users/jdimas/GitHub/ABMNK/real_data")
Quandl.api_key("iyqies2dKE9mRZpR2zUm")
# Select the series to import
OUTPUT_GAP <- TRUE
INFLATION <- TRUE
INTEREST <- TRUE
EXP_INFLATION <- TRUE
BCB_GDP_DEFLATOR <- FALSE
UNCERTAINTY <- TRUE
QUARTER_DUMMIES <- TRUE
IMF_FINANCIAL_STATS <- TRUE
IBCBR <- TRUE
# Select the first year in the series
INITIAL_YEAR <- 1960
date <- as.yearqtr(INITIAL_YEAR + seq(0, 235)/4)
data <- data.frame(date, row.names="date")
# Import Output Gap (IPEA)
if (OUTPUT_GAP) {
outputGap <- read.csv("ipea-CC37_Produto-Potencial-trimestral-1993t1-2017t3.csv", sep=";", skip=5, header=FALSE, col.names=c("date", "pot_gdp", "real_gdp", "output_gap", "X1", "X2", "X3", "X4"))
outputGap <- outputGap[,c("date","output_gap")]
outputGap$date <- as.yearqtr(outputGap$date, format="%Y T%q")
rownames(outputGap) <- outputGap$date
outputGap$output_gap <- as.numeric(gsub('%', '', outputGap$output_gap))/100
data <- merge(data, outputGap, by="row.names", all=TRUE)
rm(outputGap)
rownames(data) <- data$Row.names
data$date <- rownames(data)
data$Row.names <- NULL
}
# Import inflation (Central Bank of Brazil, IPCA)
# We download monthly inflation, aggregate by quarter, and then we annualize.
# As a result we have annualized quarterly inflation.
if (INFLATION) {
inflation <- Quandl("BCB/433")
inflation$Date <- as.yearqtr(inflation$Date)
# Aggregate by quarter
inflation <- aggregate(inflation$Value/100+1, by=list(inflation$Date), "prod")
# Annualize
inflation$inflation <- (inflation$x^4)-1
rownames(inflation) <- inflation$Group.1
inflation$Group.1 <- NULL
inflation$x <- NULL
data <- merge(data, inflation, by="row.names", all=TRUE)
rm(inflation)
rownames(data) <- data$Row.names
data$date <- rownames(data)
data$Row.names <- NULL
}
# Import interest rate (Central Bank of Brazil, SELIC)
# The interest rate is computed daily and represents the annual rate.
# We collapse by quarter and take the current annual interest rate at the end of each quarter.
if (INTEREST) {
interest <- data.frame(Quandl("BCB/1178", collapse="quarterly", type="zoo"))
colnames(interest) <- "nominal_interest_rate"
interest$nominal_interest_rate <- interest$nominal_interest_rate/100
data <- merge(data, interest, by="row.names", all=TRUE)
rm(interest)
rownames(data) <- data$Row.names
data$date <- rownames(data)
data$Row.names <- NULL
}
# Import expected inflation (Central Bank of Brazil, Expected inflation)
# The expected inflation is computed daily and represents the expected inflation for the next 12 months.
# We take the last value for each quarter.
if (EXP_INFLATION) {
expInfl <- read.csv("bcb-expected inflation-2001jan-2018fev.csv", colClasses=c("Date", "numeric"))
expInfl$dateqtr <- as.yearqtr(expInfl$date)
expInfl <- aggregate(expInfl$"exp_inflation", by=list(expInfl$dateqtr), "tail", n=1)
rownames(expInfl) <- expInfl$Group.1
expInfl$exp_inflation <- expInfl$x/100
expInfl$Group.1 <- NULL
expInfl$x <- NULL
data <- merge(data, expInfl, by="row.names", all=TRUE)
rm(expInfl)
rownames(data) <- data$Row.names
data$date <- rownames(data)
data$Row.names <- NULL
}
# Calculate real interest rate
if(INTEREST & EXP_INFLATION) {
data$real_interest_rate <- data$nominal_interest_rate - data$exp_inflation
}
# Import GDP deflator (Central Bank of Brazil, GDP deflator, yearly)
if (BCB_GDP_DEFLATOR) {
gdpDeflator <- data.frame(Quandl("BCB/1211", collapse="quarterly", type="zoo"))
colnames(gdpDeflator) <- "bcb_gdp_deflator"
data <- merge(data, gdpDeflator, by="row.names", all=TRUE)
rm(gdpDeflator)
rownames(data) <- data$Row.names
data$date <- rownames(data)
data$Row.names <- NULL
}
# Import index of uncertainty calculated by FGV (IIE-br) from 2000 to 2018.
# The index comes in monthly values. I keep the last month of each quarter.
if(UNCERTAINTY) {
uncertainty <- read.csv("FGV-uncertainty-IIE-br-2000to2018.csv", skip=1, colClasses = c("character", "numeric"))
uncertainty$date <- as.yearqtr(uncertainty$date, format="%m/%Y")
uncertainty <- aggregate(uncertainty$uncertainty, by=list(uncertainty$date), "tail", n=1)
rownames(uncertainty) <- uncertainty$Group.1
uncertainty$uncertainty <- uncertainty$x
uncertainty$Group.1 <- NULL
uncertainty$x <- NULL
data <- merge(data, uncertainty, by="row.names", all=TRUE)
rm(uncertainty)
rownames(data) <- data$Row.names
data$date <- rownames(data)
data$Row.names <- NULL
}
if(IBCBR) {
ibcbr <- read.csv("bcb-IBC-br-monthly-2003to2017.csv", skip=1, colClasses = c("character", "numeric"))
ibcbr$date <- as.yearqtr(ibcbr$date, format="%d/%m/%Y")
ibcbr <- aggregate(ibcbr$ibcbr, by=list(ibcbr$date), "tail", n=1)
rownames(ibcbr) <- ibcbr$Group.1
ibcbr$ibcbr <- ibcbr$x
ibcbr$Group.1 <- NULL
ibcbr$x <- NULL
data <- merge(data, ibcbr, by="row.names", all=TRUE)
rm(ibcbr)
rownames(data) <- data$Row.names
data$date <- rownames(data)
data$Row.names <- NULL
}
# Import several variables (IMF International Financial Statistics (IFS), Brazil, from 1990Q1 to 2017Q4, http://data.imf.org/regular.aspx?key=61545852)
if (IMF_FINANCIAL_STATS) {
imfFinStats <- read.csv("International_Financial_Statistics.csv", skip=1, sep=";")
imfFinStats$date <- as.yearqtr(imfFinStats$date, format="Q%q %Y")
for (i in 2:12) {
imfFinStats[,i] <- as.numeric(gsub(',', '', imfFinStats[,i]))
if (i <= 9) {
imfFinStats[,i] <- imfFinStats[,i]*1000000
}
if (i == 11 | i == 12) {
imfFinStats[,i] <- imfFinStats[,i]/100
}
}
rownames(imfFinStats) <- imfFinStats$date
imfFinStats$date <- NULL
data <- merge(data, imfFinStats, by="row.names", all=TRUE)
rm(imfFinStats)
rownames(data) <- data$Row.names
data$date <- rownames(data)
data$Row.names <- NULL
}
q <- 1
data[grep(paste0("Q",q), data$date, fixed=TRUE),paste0("q",q)]
View(data)
data[grep(paste0("Q",1), data$date, fixed=TRUE),paste0("q",1)]
data[grep(paste0("Q",1), data$date, fixed=TRUE),)]
data[grep(paste0("Q",1), data$date, fixed=TRUE),]
data[grep(paste0("Q",q), data$date, fixed=TRUE),]
data[-grep(paste0("Q",q), data$date, fixed=TRUE),]
source('~/GitHub/ABMNK/import_real_data.R')
View(data)
# Initial import ----------------------------------------------------------
rm(list = ls())
setwd("/Users/jdimas/GitHub/ABMNK/real_data")
data <- read.csv("data.csv", colClasses=c("Date", rep("numeric", 22)))
na.omit(data, cols=c("inflation", "nominal_interest_rate"))
df <- na.omit(data, cols=c("inflation", "nominal_interest_rate"))
View(df)
df <- na.omit(data[,c("inflation", "nominal_interest_rate")],]
rownames(df) <- c(1:nrow(df))
plot_ly(df, x=~date, y = ~nominal_interest_rate, name = 'nominal interest rate', type="scatter", mode = 'lines+markers',  hoverinfo = 'text', text = ~paste(rownames(df), date, sep="<br>")) %>%
add_trace(y = ~inflation, name = "inflation")
lm1 <- lm(inflation ~ q1 + q2 + q3 + q4, df)
# Other analysis  ---------------------------------------------------------
plot_ly(na.omit(data), x=~date, y = ~bcb_gdp_deflator, name = 'BCB', type="scatter", mode = 'lines+markers') %>%
add_trace(y = ~gdp_deflator, name = 'IMF')
fit <- lm(nominal_interest_rate ~ exp_inflation, data)
summary(fit)
# CONTINUE TO ANALYSE WHAT DROVE INTEREST RATES. PAY ATTENTION TO THE BREAK AROUND 2012.
plot_ly(recentPeriod, x=~date, y=~inflation, type="scatter", mode="lines")
print(paste("Inflation is stationary:", adf.test(recentPeriod$inflation)$p.value <= 0.05))
plot_ly(recentPeriod, x=~date, y=~nominal_interest_rate, type="scatter", mode="lines")
print(paste("Nominal interest rate is stationary:", adf.test(recentPeriod$nominal_interest_rate)$p.value <= 0.05))
plot_ly(recentPeriod, x=~date, y=~output_gap, type="scatter", mode="lines")
print(paste("Output gap is stationary:", adf.test(recentPeriod$output_gap)$p.value <= 0.05))
var <- VAR(recentPeriod[,c("inflation", "output_gap", "nominal_interest_rate", "exp_inflation")], lag.max=4, ic="AIC")
var <- VAR(recentPeriod[,c("inflation", "output_gap", "nominal_interest_rate", "exp_inflation")], lag.max=4, ic="AIC")
summary(var)
Amat = diag(4)
Amat[2,1] <- NA
Amat[3,1] <- NA
Amat[3,2] <- NA
Amat[4,1] <- NA
Amat[4,2] <- NA
Amat[4,3] <- NA
# 1 0 0 0
# NA 1 0 0
# NA NA 1 0
# NA NA NA 1
svar <- SVAR(var, estmethod = "direct", Amat=Amat, Bmat=NULL, max.iter=1000)
summary(svar)
svar
interestrate_inflation <- irf(svar, impulse="nominal_interest_rate", response="inflation", n.ahead=100)
plot(interestrate_inflation)
outputgap_inflation  <- irf(svar, impulse="output_gap", response="nominal_interest_rate")
plot(outputgap_inflation)
inflation_interestrate <- irf(svar, impulse="inflation", response="nominal_interest_rate", n.ahead=100)
plot(inflation_interestrate)
exp_inflation_interestrate <- irf(svar, impulse="exp_inflation", response="nominal_interest_rate", n.ahead=100)
plot(exp_inflation_interestrate)
interestrate_exp_inflation <- irf(svar, impulse="nominal_interest_rate", response="exp_inflation", n.ahead=100)
plot(interestrate_exp_inflation)
df <- na.omit(data[,c("inflation", "nominal_interest_rate")],])
df <- na.omit(data[,c("inflation", "nominal_interest_rate")])
View(df)
source('~/GitHub/ABMNK/import_real_data.R')
View(data)
# Initial import ----------------------------------------------------------
rm(list = ls())
setwd("/Users/jdimas/GitHub/ABMNK/real_data")
data <- read.csv("data.csv", colClasses=c("Date", rep("numeric", 22)))
data <- read.csv("data.csv", colClasses=c("Date", rep("numeric", 21)))
df <- na.omit(data[,c("inflation", "nominal_interest_rate", "q2", "q3", "q4")])
View(df)
df <- na.omit(data[,c("date","inflation", "nominal_interest_rate", "q2", "q3", "q4")])
plot_ly(df, x=~date, y = ~nominal_interest_rate, name = 'nominal interest rate', type="scatter", mode = 'lines+markers',  hoverinfo = 'text', text = ~paste(rownames(df), date, sep="<br>")) %>%
add_trace(y = ~inflation, name = "inflation")
lm1 <- lm(inflation ~ q2 + q3 + q4, df)
lm1$residuals
df$inflation_adj <- lm1$residuals
View(df)
summary(lm1)
plot(lm1)
summary(fit)
lm1 <- lm(inflation ~ q2 + q3 + q4, df)
plot_ly(df, x=~date, y = ~nominal_interest_rate, name = 'nominal interest rate', type="scatter", mode = 'lines+markers',  hoverinfo = 'text', text = ~paste(rownames(df), date, sep="<br>")) %>%
add_trace(y = ~inflation, name = "inflation")
lm1 <- lm(inflation ~ q2 + q3 + q4, df)
amline(lm1)
abline(lm1)
?abline
abline(mC <- lm1)
plot_ly(lm1)
plot_ly(lm1$fitted.values)
class(lm1$fitted.values)
lm1$fitted.values
?plot_ly
plot_ly(y = lm1$fitted.values, x = df$q2)
summary(lm1)
View(df)
?tail
df <- tail(na.omit(data[,c("date","inflation", "nominal_interest_rate", "q2", "q3", "q4")]),80)
df <- tail(na.omit(data[,c("date","inflation", "nominal_interest_rate", "q2", "q3", "q4")]),92)
rownames(df) <- c(1:nrow(df))
plot_ly(df, x=~date, y = ~nominal_interest_rate, name = 'nominal interest rate', type="scatter", mode = 'lines+markers',  hoverinfo = 'text', text = ~paste(rownames(df), date, sep="<br>")) %>%
add_trace(y = ~inflation, name = "inflation")
lm1 <- lm(inflation ~ q2 + q3 + q4, df)
summary(lm1)
df$inflation_adj <- lm1$residuals
View(df)
plot_ly(df, x=~date, y = ~nominal_interest_rate, name = 'nominal interest rate', type="scatter", mode = 'lines+markers',  hoverinfo = 'text', text = ~paste(rownames(df), date, sep="<br>")) %>%
add_trace(y = ~inflation, name = "inflation") %>%
add_trace(y = ~inflation_adj, name = "inflation") %>%
lm1 <- lm(inflation ~ q2 + q3 + q4, df)
plot_ly(df, x=~date, y = ~nominal_interest_rate, name = 'nominal interest rate', type="scatter", mode = 'lines+markers',  hoverinfo = 'text', text = ~paste(rownames(df), date, sep="<br>")) %>%
add_trace(y = ~inflation, name = "inflation") %>%
add_trace(y = ~inflation_adj, name = "inflation_adj")
lm1$df.residual
lm1$effects
?summary
plot_ly(df, x=~date, y = ~nominal_interest_rate, name = 'nominal interest rate', type="scatter", mode = 'lines+markers',  hoverinfo = 'text', text = ~paste(rownames(df), date, sep="<br>")) %>%
add_trace(y = ~inflation, name = "inflation") %>%
add_trace(y = ~inflation_adj, name = "inflation_adj")
add_trace(y = ~inflation, name = "inflation") %>%
add_trace(y = ~inflation_adj, name = "inflation_adj")
plot_ly()add_trace(y = ~inflation, name = "inflation") %>%
add_trace(y = ~inflation_adj, name = "inflation_adj")
plot_ly(df)add_trace(y = ~inflation, name = "inflation") %>%
add_trace(y = ~inflation_adj, name = "inflation_adj")
plot_ly(df) %>%
add_trace(y = ~inflation, name = "inflation") %>%
add_trace(y = ~inflation_adj, name = "inflation_adj")
# add_trace(y = ~inflation, name = "inflation") %>%
add_trace(y = ~inflation_adj, name = "inflation_adj")
View(df)
plot_ly(df, x=~date, y = ~inflation, name = 'inflation', type="scatter", mode = 'lines+markers',  hoverinfo = 'text', text = ~paste(rownames(df), date, sep="<br>")) %>%
# add_trace(y = ~inflation, name = "inflation") %>%
add_trace(y = ~inflation_adj, name = "inflation_adj")
summary(lm1)
plot_ly(df, x=~date, y = ~inflation-inflation_adj, name = 'inflation', type="scatter", mode = 'lines+markers',  hoverinfo = 'text', text = ~paste(rownames(df), date, sep="<br>")) %>%
# add_trace(y = ~inflation, name = "inflation") %>%
add_trace(y = ~inflation_adj, name = "inflation_adj")
lm1$fitted.values
df$fitted <- lm1$fitted.values
plot_ly(df, x=~date, y = ~inflation-inflation_adj, name = 'inflation', type="scatter", mode = 'lines+markers',  hoverinfo = 'text', text = ~paste(rownames(df), date, sep="<br>")) %>%
# add_trace(y = ~inflation, name = "inflation") %>%
add_trace(y = ~fitted, name = "inflation_adj")
plot_ly(df, x=~date, y = ~inflation, name = 'inflation', type="scatter", mode = 'lines+markers',  hoverinfo = 'text', text = ~paste(rownames(df), date, sep="<br>")) %>%
add_trace(y = ~inflation_adj, name = "inflation adj") %>%
add_trace(y = ~fitted, name = "fitted values")
plot_ly(df, x=~date, y = ~fitted, name = 'fitted values', type="scatter", mode = 'lines+markers',  hoverinfo = 'text', text = ~paste(rownames(df), date, sep="<br>"))
add_trace(y = ~inflation_adj, name = "inflation adj")
plot_ly(df, x=~date, y = ~fitted, name = 'fitted values', type="scatter", mode = 'lines+markers',  hoverinfo = 'text', text = ~paste(rownames(df), date, sep="<br>")) %>%
add_trace(y = ~inflation_adj, name = "inflation adj")
source('~/GitHub/ABMNK/import_real_data.R')
# Initial import ----------------------------------------------------------
rm(list = ls())
setwd("/Users/jdimas/GitHub/ABMNK/real_data")
data <- read.csv("data.csv", colClasses=c("Date", rep("numeric", 21)))
df <- na.omit(data[,c("date", "exp_inflation", "nominal_interest_rate", "real_interest_rate")])
rownames(df) <- c(1:nrow(df))
plot_ly(df, x=~date, y = ~exp_inflation, name = 'expected inflation', type="scatter", mode = 'lines+markers',  hoverinfo = 'text', text = ~paste(rownames(df), date, exp_inflation, sep="<br>")) %>%
add_trace(y = ~real_interest_rate, name = 'real interest rate') %>%
add_trace(y = ~nominal_interest_rate, name = 'nominal interest rate')
while (!require("plotly")) install.packages("plotly")
while (!require("tseries")) install.packages("tseries")
while (!require("vars")) install.packages("vars")
while (!require("strucchange")) install.packages("strucchange")
while (!require("ecm")) install.packages("ecm")
df <- na.omit(data[,c("date", "exp_inflation", "nominal_interest_rate", "real_interest_rate")])
rownames(df) <- c(1:nrow(df))
plot_ly(df, x=~date, y = ~exp_inflation, name = 'expected inflation', type="scatter", mode = 'lines+markers',  hoverinfo = 'text', text = ~paste(rownames(df), date, exp_inflation, sep="<br>")) %>%
add_trace(y = ~real_interest_rate, name = 'real interest rate') %>%
add_trace(y = ~nominal_interest_rate, name = 'nominal interest rate')
df <- na.omit(data[,c("date", "nominal_interest_rate", "real_interest_rate", "output_gap", "exp_inflation", "inflation")])
rownames(df) <- c(1:nrow(df))
plot_ly(df, x=~date, y = ~nominal_interest_rate, name = 'nominal interest rate', type="scatter", mode = 'lines+markers',  hoverinfo = 'text', text = ~paste(rownames(df), date, output_gap, exp_inflation, sep="<br>")) %>%
add_trace(y = ~output_gap, name = 'output gap')  %>%
add_trace(y = ~exp_inflation, name = "exp inflation")
df <- tail(na.omit(data[,c("date","inflation", "nominal_interest_rate", "q2", "q3", "q4")]),92)
rownames(df) <- c(1:nrow(df))
plot_ly(df, x=~date, y = ~fitted, name = 'fitted values', type="scatter", mode = 'lines+markers',  hoverinfo = 'text', text = ~paste(rownames(df), date, sep="<br>")) %>%
add_trace(y = ~inflation_adj, name = "inflation adj")
df <- tail(na.omit(data[,c("date","inflation", "nominal_interest_rate", "q2", "q3", "q4")]),92)
rownames(df) <- c(1:nrow(df))
lm1 <- lm(inflation ~ q2 + q3 + q4, df)
summary(lm1)
df$inflation_adj <- lm1$residuals
plot_ly(df, x=~date, y = ~fitted, name = 'fitted values', type="scatter", mode = 'lines+markers',  hoverinfo = 'text', text = ~paste(rownames(df), date, sep="<br>")) %>%
add_trace(y = ~inflation_adj, name = "inflation adj")
df$fitted <- lm1$fitted.values
plot_ly(df, x=~date, y = ~fitted, name = 'fitted values', type="scatter", mode = 'lines+markers',  hoverinfo = 'text', text = ~paste(rownames(df), date, sep="<br>")) %>%
add_trace(y = ~inflation_adj, name = "inflation adj")
df <- tail(na.omit(data[,c("date","inflation", "nominal_interest_rate", "q2", "q3", "q4")]),92)
rownames(df) <- c(1:nrow(df))
lm1 <- lm(inflation ~ q2 + q3 + q4, df)
summary(lm1)
df$inflation_adj <- lm1$residuals
plot_ly(df, x=~date, y = ~nominal_interest_rate, name = 'nominal interest rate', type="scatter", mode = 'lines+markers',  hoverinfo = 'text', text = ~paste(rownames(df), date, sep="<br>")) %>%
add_trace(y = ~inflation_adj, name = "inflation season. adj.")
df <- na.omit(data[,c("date", "nominal_interest_rate", "real_interest_rate", "output_gap", "exp_inflation", "inflation")])
rownames(df) <- c(1:nrow(df))
plot_ly(df, x=~date, y = ~nominal_interest_rate, name = 'nominal interest rate', type="scatter", mode = 'lines+markers',  hoverinfo = 'text', text = ~paste(rownames(df), date, output_gap, exp_inflation, sep="<br>")) %>%
add_trace(y = ~output_gap, name = 'output gap')  %>%
add_trace(y = ~exp_inflation, name = "exp inflation")
plot_ly(df, x=~date, y=~inflation, type="scatter", mode="lines")
print(paste("Inflation is stationary:", adf.test(df$inflation)$p.value <= 0.05))
adf.test(df$inflation)$p.value
summary(adf.test(df$inflation))
adf.test(df$inflation)
adf.test(df$inflation)
plot_ly(df, x=~date, y=~inflation, type="scatter", mode="lines")
adf.test(df$inflation)
plot_ly(df, x=~date, y=~nominal_interest_rate, type="scatter", mode="lines")
adf.test(df$nominal_interest_rate)
plot_ly(df, x=~date, y=~output_gap, type="scatter", mode="lines")
adf.test(df$output_gap)
plot_ly(df, x=~date, y=~inflation, type="scatter", mode="lines")
plot_ly(df, x=~date, y=~nominal_interest_rate, type="scatter", mode="lines")
plot_ly(df, x=~date, y=~output_gap, type="scatter", mode="lines")
plot_ly(df, x=~date, y=~inflation, type="scatter", mode="lines")
adf.test(df$nominal_interest_rate)
adf.test(df$output_gap)
var <- VAR(df[,c("inflation", "output_gap", "nominal_interest_rate", "exp_inflation")], lag.max=4, ic="AIC")
summary(var)
plot_ly(df, x=~date, y=~inflation, type="scatter", mode="lines")
plot_ly(df, x=~date, y=~nominal_interest_rate, type="scatter", mode="lines")
View(df)
df <- na.omit(data[,c("date", "exp_inflation", "nominal_interest_rate", "real_interest_rate")])
rownames(df) <- c(1:nrow(df))
plot_ly(df, x=~date, y = ~exp_inflation, name = 'expected inflation', type="scatter", mode = 'lines+markers',  hoverinfo = 'text', text = ~paste(rownames(df), date, exp_inflation, sep="<br>")) %>%
add_trace(y = ~real_interest_rate, name = 'real interest rate') %>%
add_trace(y = ~nominal_interest_rate, name = 'nominal interest rate')
View(df)
adf.test(df$output_gap)
df <- tail(na.omit(data[,c("date","inflation", "nominal_interest_rate", "output_gap", "q2", "q3", "q4")]),71)
rownames(df) <- c(1:nrow(df))
lm1 <- lm(inflation ~ q2 + q3 + q4, df)
summary(lm1)
df$inflation_adj <- lm1$residuals
plot_ly(df, x=~date, y = ~nominal_interest_rate, name = 'nominal interest rate', type="scatter", mode = 'lines+markers',  hoverinfo = 'text', text = ~paste(rownames(df), date, sep="<br>")) %>%
add_trace(y = ~inflation_adj, name = "inflation season. adj.")
df <- tail(na.omit(data[,c("date","inflation", "nominal_interest_rate", "output_gap", "q2", "q3", "q4")]),43)
rownames(df) <- c(1:nrow(df))
lm1 <- lm(inflation ~ q2 + q3 + q4, df)
summary(lm1)
df$inflation_adj <- lm1$residuals
plot_ly(df, x=~date, y = ~nominal_interest_rate, name = 'nominal interest rate', type="scatter", mode = 'lines+markers',  hoverinfo = 'text', text = ~paste(rownames(df), date, sep="<br>")) %>%
add_trace(y = ~inflation_adj, name = "inflation season. adj.")
plot_ly(df, x=~date, y=~inflation, type="scatter", mode="lines")
adf.test(df$inflation)
df <- tail(na.omit(data[,c("date","inflation", "nominal_interest_rate", "output_gap", "q2", "q3", "q4")]),92)
rownames(df) <- c(1:nrow(df))
lm1 <- lm(inflation ~ q2 + q3 + q4, df)
summary(lm1)
df$inflation_adj <- lm1$residuals
plot_ly(df, x=~date, y = ~nominal_interest_rate, name = 'nominal interest rate', type="scatter", mode = 'lines+markers',  hoverinfo = 'text', text = ~paste(rownames(df), date, sep="<br>")) %>%
add_trace(y = ~inflation_adj, name = "inflation season. adj.")
df <- tail(na.omit(data[,c("date","inflation", "nominal_interest_rate", "output_gap", "q2", "q3", "q4")]),91)
rownames(df) <- c(1:nrow(df))
lm1 <- lm(inflation ~ q2 + q3 + q4, df)
summary(lm1)
df$inflation_adj <- lm1$residuals
plot_ly(df, x=~date, y = ~nominal_interest_rate, name = 'nominal interest rate', type="scatter", mode = 'lines+markers',  hoverinfo = 'text', text = ~paste(rownames(df), date, sep="<br>")) %>%
add_trace(y = ~inflation_adj, name = "inflation season. adj.")
df <- tail(na.omit(data[,c("date","inflation", "nominal_interest_rate", "output_gap", "q2", "q3", "q4")]),88)
rownames(df) <- c(1:nrow(df))
lm1 <- lm(inflation ~ q2 + q3 + q4, df)
summary(lm1)
df$inflation_adj <- lm1$residuals
plot_ly(df, x=~date, y = ~nominal_interest_rate, name = 'nominal interest rate', type="scatter", mode = 'lines+markers',  hoverinfo = 'text', text = ~paste(rownames(df), date, sep="<br>")) %>%
add_trace(y = ~inflation_adj, name = "inflation season. adj.")
diff(df$nominal_interest_rate)
df$diff_nominal_interest_rate <- diff(df$nominal_interest_rate)
df$diff_nominal_interest_rate <- c(0, diff(df$nominal_interest_rate))
while (!require("plotly")) install.packages("plotly")
while (!require("tseries")) install.packages("tseries")
while (!require("vars")) install.packages("vars")
while (!require("strucchange")) install.packages("strucchange")
while (!require("ecm")) install.packages("ecm")
# Initial import ----------------------------------------------------------
rm(list = ls())
setwd("/Users/jdimas/GitHub/ABMNK/real_data")
data <- read.csv("data.csv", colClasses=c("Date", rep("numeric", 21)))
df <- na.omit(data[,c("date", "exp_inflation", "nominal_interest_rate", "real_interest_rate")])
rownames(df) <- c(1:nrow(df))
plot_ly(df, x=~date, y = ~exp_inflation, name = 'expected inflation', type="scatter", mode = 'lines+markers',  hoverinfo = 'text', text = ~paste(rownames(df), date, exp_inflation, sep="<br>")) %>%
add_trace(y = ~real_interest_rate, name = 'real interest rate') %>%
add_trace(y = ~nominal_interest_rate, name = 'nominal interest rate')
# Exploratory: compare the R2 of different lags on interest_rate, both real and nominal.
lm1 <- summary(lm(nominal_interest_rate ~ lagpad(exp_inflation,1), df))
lm2 <- summary(lm(nominal_interest_rate ~ exp_inflation, df))
lm3 <- summary(lm(real_interest_rate ~ lagpad(exp_inflation,1), df))
lm4 <- summary(lm(real_interest_rate ~ exp_inflation, df))
print(paste("lm1 R2: ",lm1$r.squared))
print(paste("lm2 R2: ",lm2$r.squared))
print(paste("lm3 R2: ",lm3$r.squared))
print(paste("lm4 R2: ",lm4$r.squared))
breakpoints(nominal_interest_rate ~ lagpad(exp_inflation,1), data=df)$breakpoints
# Breakpoints at observation number: 18 28 41 54
breakpoints(real_interest_rate ~ lagpad(exp_inflation,1), data=df)$breakpoints
df <- na.omit(data[,c("date", "nominal_interest_rate", "real_interest_rate", "output_gap", "exp_inflation", "inflation")])
rownames(df) <- c(1:nrow(df))
plot_ly(df, x=~date, y = ~nominal_interest_rate, name = 'nominal interest rate', type="scatter", mode = 'lines+markers',  hoverinfo = 'text', text = ~paste(rownames(df), date, output_gap, exp_inflation, sep="<br>")) %>%
add_trace(y = ~output_gap, name = 'output gap')  %>%
add_trace(y = ~exp_inflation, name = "exp inflation")
df <- tail(na.omit(data[,c("date","inflation", "nominal_interest_rate", "output_gap", "q2", "q3", "q4")]),88)
rownames(df) <- c(1:nrow(df))
lm1 <- lm(inflation ~ q2 + q3 + q4, df)
summary(lm1)
df$inflation_adj <- lm1$residuals
plot_ly(df, x=~date, y = ~nominal_interest_rate, name = 'nominal interest rate', type="scatter", mode = 'lines+markers',  hoverinfo = 'text', text = ~paste(rownames(df), date, sep="<br>")) %>%
add_trace(y = ~inflation_adj, name = "inflation season. adj.")
# CONTINUE TO ANALYSE WHAT DROVE INTEREST RATES. PAY ATTENTION TO THE BREAK AROUND 2012.
df$inflation_diff <- c(0, diff(df$inflation))
df$exp_inflation_diff <- c(0, diff(df$exp_inflation))
df$nominal_interest_rate_diff <- c(0, diff(df$nominal_interest_rate))
df$output_gap_diff <- c(0, diff(df$output_gap))
data <- read.csv("data.csv", colClasses=c("Date", rep("numeric", 21)))
data$inflation_diff <- c(0, diff(data$inflation))
data$exp_inflation_diff <- c(0, diff(data$exp_inflation))
data$nominal_interest_rate_diff <- c(0, diff(data$nominal_interest_rate))
data$output_gap_diff <- c(0, diff(data$output_gap))
View(data)
# Initial import ----------------------------------------------------------
rm(list = ls())
setwd("/Users/jdimas/GitHub/ABMNK/real_data")
data <- read.csv("data.csv", colClasses=c("Date", rep("numeric", 21)))
data$inflation_diff <- c(NA, diff(data$inflation))
data$exp_inflation_diff <- c(NA, diff(data$exp_inflation))
data$nominal_interest_rate_diff <- c(NA, diff(data$nominal_interest_rate))
data$output_gap_diff <- c(NA, diff(data$output_gap))
View(data)
?write.csv
write.csv(data, file ="data2.csv", row.names=FALSE, sep=",")
